[tox]
envlist = py3{6,7,8,9,10}-{linux,macos,windows}
skip_missing_interpreters = true
skipsdist=True

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
skip_install = true

passenv =
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv =
  PYTHONPATH={toxinidir}

allowlist_externals =
    bash

deps =
    pip>=21.2
    psutil
    -rrequirements-dev.txt
    -e .

commands =
    bash -c 'export NUM_PROC=$(python -c "import psutil; print(len(psutil.Process().cpu_affinity()))"); \
        pytest -n $NUM_PROC {posargs}'

[testenv:lint]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE
    PYTHONIOENCODING

deps =
    pip>=21.2
    pylint
    -rrequirements.txt

commands = pylint --fail-under=7 pdfrw/

[testenv:deploy]
passenv =
    pythonLocation
    CI
    PIP_DOWNLOAD_CACHE

allowlist_externals = bash

deps =
    pip>=21.2
    build
    twine

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv =
    pythonLocation
    CI
    PIP_DOWNLOAD_CACHE

allowlist_externals =
    bash

deps =
    pip>=21.2
    # we need this because setup.py has no requires o.O
    -rrequirements.txt
    psutil
    pylint
    pytest-xdist

commands_pre =
    python -m pip install -U pip
    pip install pdfrw --force-reinstall --pre --prefer-binary -f dist/

commands =
    bash -c 'export NUM_PROC=$(python -c "import psutil; print(len(psutil.Process().cpu_affinity()))"); \
        pytest -n $NUM_PROC {posargs}'

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.2

commands =
    #bash -c 'make -C docs/ clean'
    bash -c 'rm -rf build dist *.egg-info'
