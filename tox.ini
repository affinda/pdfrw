[tox]
envlist = py3{6,7,8,9,10}-{linux,macos,windows}
skip_missing_interpreters = true
skipsdist = true

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[base]
deps =
    pip>=21.1
    versioningit

[build]
deps =
    pip>=21.1
    build
    twine

[testenv]
skip_install = true

passenv =
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv =
  PYTHONPATH={toxinidir}

allowlist_externals =
    bash

deps =
    {[base]deps}
    psutil
    -e .[test,cov]

commands =
    python -c "import pdfrw; print(pdfrw.__version__)"
    bash -c 'export NUM_PROC=$(python tests/get_cpu_count.py); \
        pytest -n $NUM_PROC --capture=fd . --cov=pdfrw --cov-branch --cov-report term-missing pdfrw/'

[testenv:lint]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE
    PYTHONIOENCODING

allowlist_externals =
    bash

deps =
    {[base]deps}
    pylint
    -rrequirements.txt

commands_pre =
    # need to generate version info in a fresh checkout
    bash -c '[[ -f pdfrw/_version.py ]] || python setup.py egg_info'

commands =
    pylint --fail-under=7 --ignore=_version.py pdfrw/

[testenv:build]
passenv =
    pythonLocation
    CI
    GITHUB*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals = bash

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv =
    pythonLocation
    CI
    PIP_DOWNLOAD_CACHE

allowlist_externals =
    bash

deps =
    pip>=21.2
    psutil
    pytest
    pytest-xdist

commands_pre =
    python -m pip install -U pip
    pip install pdfrw --force-reinstall --pre --prefer-binary -f dist/

commands =
    bash -c 'export NUM_PROC=$(python tests/get_cpu_count.py); \
        pytest -n $NUM_PROC --capture=no {posargs}'

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    flake8
    flake8-bugbear

commands =
    flake8 pdfrw/

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    -r requirements.txt
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive pdfrw/

[testenv:black]
skip_install = true

setenv = PYTHONPATH = {toxinidir}/src

deps =
    {[base]deps}
    black

commands =
    black -v -S pdfrw/ {posargs}

[testenv:isort]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    isort

commands =
    python -m isort pdfrw/

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.2

commands =
    #bash -c 'make -C docs/ clean'
    bash -c 'rm -rf build dist pdfrw/_version.py *.egg-info'
